{"ast":null,"code":"var _jsxFileName = \"/home/brave/Documents/weekendproject/coffeeblog/src/components/ArticleComments.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { supabase } from '../lib/supabase';\nimport './ArticleComments.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ArticleComments = ({\n  articleId,\n  articleTitle\n}) => {\n  _s();\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState('');\n  const [isAnonymous, setIsAnonymous] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  useEffect(() => {\n    loadComments();\n  }, [articleId]);\n  const loadComments = async () => {\n    setIsLoading(true);\n    try {\n      const {\n        data,\n        error\n      } = await supabase.from('article_comments').select('*').eq('article_id', articleId).order('created_at', {\n        ascending: false\n      });\n      if (error) throw error;\n      setComments(data || []);\n    } catch (error) {\n      console.error('Error loading comments:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleSubmitComment = async e => {\n    e.preventDefault();\n    if (!newComment.trim()) return;\n    setIsSubmitting(true);\n    try {\n      const {\n        data: {\n          user\n        }\n      } = await supabase.auth.getUser();\n      if (!user) {\n        alert('Please sign in to comment');\n        return;\n      }\n\n      // Get user profile for username\n      const {\n        data: profile\n      } = await supabase.from('profiles').select('username').eq('id', user.id).single();\n      const {\n        error\n      } = await supabase.from('article_comments').insert([{\n        user_id: user.id,\n        article_id: articleId,\n        article_title: articleTitle,\n        content: newComment.trim(),\n        username: isAnonymous ? 'Anonymous' : (profile === null || profile === void 0 ? void 0 : profile.username) || 'User',\n        is_anonymous: isAnonymous\n      }]);\n      if (error) throw error;\n      setNewComment('');\n      setIsAnonymous(false);\n      await loadComments();\n    } catch (error) {\n      console.error('Error submitting comment:', error);\n      alert('Error submitting comment. Please try again.');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"article-comments\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Comments (\", comments.length, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmitComment,\n      className: \"comment-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: newComment,\n        onChange: e => setNewComment(e.target.value),\n        placeholder: \"Share your thoughts...\",\n        rows: 4,\n        className: \"comment-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-form-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"anonymous-checkbox\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: isAnonymous,\n            onChange: e => setIsAnonymous(e.target.checked)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), \"Post anonymously\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: isSubmitting || !newComment.trim(),\n          className: \"submit-comment-btn\",\n          children: isSubmitting ? 'Posting...' : 'Post Comment'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments-list\",\n      children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: \"Loading comments...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this) : comments.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-comments\",\n        children: \"No comments yet. Be the first to comment!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this) : comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"comment-author\",\n            children: comment.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"comment-date\",\n            children: new Date(comment.created_at).toLocaleDateString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-content\",\n          children: comment.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 15\n        }, this)]\n      }, comment.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n_s(ArticleComments, \"CTRjzGtAWaYlQAmAISpUGS+1NuI=\");\n_c = ArticleComments;\nexport default ArticleComments;\nvar _c;\n$RefreshReg$(_c, \"ArticleComments\");","map":{"version":3,"names":["React","useState","useEffect","supabase","jsxDEV","_jsxDEV","ArticleComments","articleId","articleTitle","_s","comments","setComments","newComment","setNewComment","isAnonymous","setIsAnonymous","isLoading","setIsLoading","isSubmitting","setIsSubmitting","loadComments","data","error","from","select","eq","order","ascending","console","handleSubmitComment","e","preventDefault","trim","user","auth","getUser","alert","profile","id","single","insert","user_id","article_id","article_title","content","username","is_anonymous","className","children","length","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","target","placeholder","rows","type","checked","disabled","map","comment","Date","created_at","toLocaleDateString","_c","$RefreshReg$"],"sources":["/home/brave/Documents/weekendproject/coffeeblog/src/components/ArticleComments.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { supabase } from '../lib/supabase';\nimport './ArticleComments.css';\n\ninterface Comment {\n  id: string;\n  content: string;\n  created_at: string;\n  username: string;\n  is_anonymous: boolean;\n}\n\ninterface ArticleCommentsProps {\n  articleId: string;\n  articleTitle: string;\n}\n\nconst ArticleComments: React.FC<ArticleCommentsProps> = ({ articleId, articleTitle }) => {\n  const [comments, setComments] = useState<Comment[]>([]);\n  const [newComment, setNewComment] = useState('');\n  const [isAnonymous, setIsAnonymous] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  useEffect(() => {\n    loadComments();\n  }, [articleId]);\n\n  const loadComments = async () => {\n    setIsLoading(true);\n    try {\n      const { data, error } = await supabase\n        .from('article_comments')\n        .select('*')\n        .eq('article_id', articleId)\n        .order('created_at', { ascending: false });\n\n      if (error) throw error;\n      setComments(data || []);\n    } catch (error) {\n      console.error('Error loading comments:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleSubmitComment = async (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!newComment.trim()) return;\n\n    setIsSubmitting(true);\n    try {\n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) {\n        alert('Please sign in to comment');\n        return;\n      }\n\n      // Get user profile for username\n      const { data: profile } = await supabase\n        .from('profiles')\n        .select('username')\n        .eq('id', user.id)\n        .single();\n\n      const { error } = await supabase\n        .from('article_comments')\n        .insert([\n          {\n            user_id: user.id,\n            article_id: articleId,\n            article_title: articleTitle,\n            content: newComment.trim(),\n            username: isAnonymous ? 'Anonymous' : (profile?.username || 'User'),\n            is_anonymous: isAnonymous\n          }\n        ]);\n\n      if (error) throw error;\n\n      setNewComment('');\n      setIsAnonymous(false);\n      await loadComments();\n    } catch (error) {\n      console.error('Error submitting comment:', error);\n      alert('Error submitting comment. Please try again.');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  return (\n    <div className=\"article-comments\">\n      <h3>Comments ({comments.length})</h3>\n      \n      <form onSubmit={handleSubmitComment} className=\"comment-form\">\n        <textarea\n          value={newComment}\n          onChange={(e) => setNewComment(e.target.value)}\n          placeholder=\"Share your thoughts...\"\n          rows={4}\n          className=\"comment-input\"\n        />\n        <div className=\"comment-form-actions\">\n          <label className=\"anonymous-checkbox\">\n            <input\n              type=\"checkbox\"\n              checked={isAnonymous}\n              onChange={(e) => setIsAnonymous(e.target.checked)}\n            />\n            Post anonymously\n          </label>\n          <button\n            type=\"submit\"\n            disabled={isSubmitting || !newComment.trim()}\n            className=\"submit-comment-btn\"\n          >\n            {isSubmitting ? 'Posting...' : 'Post Comment'}\n          </button>\n        </div>\n      </form>\n\n      <div className=\"comments-list\">\n        {isLoading ? (\n          <div className=\"loading\">Loading comments...</div>\n        ) : comments.length === 0 ? (\n          <div className=\"no-comments\">No comments yet. Be the first to comment!</div>\n        ) : (\n          comments.map((comment) => (\n            <div key={comment.id} className=\"comment\">\n              <div className=\"comment-header\">\n                <span className=\"comment-author\">{comment.username}</span>\n                <span className=\"comment-date\">\n                  {new Date(comment.created_at).toLocaleDateString()}\n                </span>\n              </div>\n              <div className=\"comment-content\">{comment.content}</div>\n            </div>\n          ))\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ArticleComments;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}