{"ast":null,"code":"import _objectSpread from\"/home/brave/Documents/weekendproject/coffeeblog/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import{supabase}from'../lib/supabase';import'./Auth.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Auth=_ref=>{let{isDarkMode,onAuthSuccess}=_ref;const[isLoginMode,setIsLoginMode]=useState(true);const[formData,setFormData]=useState({username:'',email:'',password:'',confirmPassword:''});const[errors,setErrors]=useState({});const[isSubmitting,setIsSubmitting]=useState(false);const[message,setMessage]=useState('');// Check if user is already logged in\nuseEffect(()=>{const checkUser=async()=>{const{data:{session}}=await supabase.auth.getSession();if(session){// Get user profile from profiles table\nconst{data:profile}=await supabase.from('profiles').select('*').eq('id',session.user.id).single();if(profile){const user={id:profile.id,username:profile.username,email:profile.email,role:profile.role,created_at:profile.created_at};onAuthSuccess(user);}}};checkUser();},[onAuthSuccess]);const handleInputChange=e=>{const{name,value}=e.target;setFormData(prev=>_objectSpread(_objectSpread({},prev),{},{[name]:value}));// Clear error when user starts typing\nif(errors[name]){setErrors(prev=>_objectSpread(_objectSpread({},prev),{},{[name]:''}));}};const validateForm=()=>{const newErrors={};if(!formData.email.trim()){newErrors.email='Email is required';}else if(!/\\S+@\\S+\\.\\S+/.test(formData.email)){newErrors.email='Email format is invalid';}if(!formData.password.trim()){newErrors.password='Password is required';}else if(formData.password.length<6){newErrors.password='Password must be at least 6 characters';}if(!isLoginMode){if(!formData.username.trim()){newErrors.username='Username is required';}if(!formData.confirmPassword.trim()){newErrors.confirmPassword='Please confirm your password';}else if(formData.password!==formData.confirmPassword){newErrors.confirmPassword='Passwords do not match';}}setErrors(newErrors);return Object.keys(newErrors).length===0;};const handleLogin=async()=>{try{const{data,error}=await supabase.auth.signInWithPassword({email:formData.email,password:formData.password});if(error){setErrors({general:error.message});return false;}if(data.user){// Get user profile\nconst{data:profile}=await supabase.from('profiles').select('*').eq('id',data.user.id).single();if(profile){const user={id:profile.id,username:profile.username,email:profile.email,role:profile.role,created_at:profile.created_at};onAuthSuccess(user);setMessage('Login successful!');return true;}}}catch(error){setErrors({general:'An error occurred during login'});}return false;};const handleRegister=async()=>{try{const{data,error}=await supabase.auth.signUp({email:formData.email,password:formData.password,options:{data:{username:formData.username,role:'subscriber'}}});if(error){setErrors({general:error.message});return false;}if(data.user){// Create user profile\nconst{error:profileError}=await supabase.from('profiles').insert([{id:data.user.id,username:formData.username,email:formData.email,role:'subscriber'}]);if(profileError){setErrors({general:'Error creating user profile'});return false;}// If user is immediately confirmed, log them in\nif(data.session){const user={id:data.user.id,username:formData.username,email:formData.email,role:'subscriber',created_at:data.user.created_at};onAuthSuccess(user);setMessage('Registration successful!');}else{setMessage('Registration successful! Please check your email for verification.');}return true;}}catch(error){setErrors({general:'An error occurred during registration'});}return false;};const handleSubmit=async e=>{e.preventDefault();if(!validateForm()){return;}setIsSubmitting(true);setErrors({});setMessage('');try{let success=false;if(isLoginMode){success=await handleLogin();}else{success=await handleRegister();}if(success){// Reset form\nsetFormData({username:'',email:'',password:'',confirmPassword:''});}}catch(error){setErrors({general:'An error occurred. Please try again.'});}finally{setIsSubmitting(false);}};const toggleMode=()=>{setIsLoginMode(!isLoginMode);setFormData({username:'',email:'',password:'',confirmPassword:''});setErrors({});setMessage('');};return/*#__PURE__*/_jsx(\"div\",{className:\"auth \".concat(isDarkMode?'dark-mode':''),children:/*#__PURE__*/_jsx(\"div\",{className:\"auth-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"auth-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"auth-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:isLoginMode?'Welcome Back':'Create Account'}),/*#__PURE__*/_jsx(\"p\",{children:isLoginMode?'Sign in to access your dashboard and saved content':'Join our community to save articles, create content, and more'})]}),message&&/*#__PURE__*/_jsx(\"div\",{className:\"message success-message\",children:message}),errors.general&&/*#__PURE__*/_jsx(\"div\",{className:\"message error-message\",children:errors.general}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"form\",children:[!isLoginMode&&/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"username\",children:\"Username *\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"username\",name:\"username\",value:formData.username,onChange:handleInputChange,placeholder:\"Enter your display name\",className:errors.username?'error':''}),errors.username&&/*#__PURE__*/_jsx(\"span\",{className:\"error-text\",children:errors.username})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"email\",children:\"Email Address *\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",id:\"email\",name:\"email\",value:formData.email,onChange:handleInputChange,placeholder:\"Enter your email\",className:errors.email?'error':''}),errors.email&&/*#__PURE__*/_jsx(\"span\",{className:\"error-text\",children:errors.email})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"password\",children:\"Password *\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",id:\"password\",name:\"password\",value:formData.password,onChange:handleInputChange,placeholder:\"Enter your password\",className:errors.password?'error':''}),errors.password&&/*#__PURE__*/_jsx(\"span\",{className:\"error-text\",children:errors.password})]}),!isLoginMode&&/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"confirmPassword\",children:\"Confirm Password *\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",id:\"confirmPassword\",name:\"confirmPassword\",value:formData.confirmPassword,onChange:handleInputChange,placeholder:\"Confirm your password\",className:errors.confirmPassword?'error':''}),errors.confirmPassword&&/*#__PURE__*/_jsx(\"span\",{className:\"error-text\",children:errors.confirmPassword})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"submit-btn\",disabled:isSubmitting,children:isSubmitting?isLoginMode?'Signing In...':'Creating Account...':isLoginMode?'Sign In':'Create Account'})]}),/*#__PURE__*/_jsx(\"div\",{className:\"auth-footer\",children:/*#__PURE__*/_jsxs(\"p\",{children:[isLoginMode?\"Don't have an account? \":\"Already have an account? \",/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"link-btn\",onClick:toggleMode,children:isLoginMode?'Sign up':'Sign in'})]})}),isLoginMode&&/*#__PURE__*/_jsx(\"div\",{className:\"demo-info\",children:/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Demo Mode:\"}),\" You can sign up with any email and password, or use the test account: \",/*#__PURE__*/_jsx(\"code\",{children:\"test@demo.com\"}),\" / \",/*#__PURE__*/_jsx(\"code\",{children:\"password123\"})]})})]})})});};export default Auth;","map":{"version":3,"names":["React","useState","useEffect","supabase","jsx","_jsx","jsxs","_jsxs","Auth","_ref","isDarkMode","onAuthSuccess","isLoginMode","setIsLoginMode","formData","setFormData","username","email","password","confirmPassword","errors","setErrors","isSubmitting","setIsSubmitting","message","setMessage","checkUser","data","session","auth","getSession","profile","from","select","eq","user","id","single","role","created_at","handleInputChange","e","name","value","target","prev","_objectSpread","validateForm","newErrors","trim","test","length","Object","keys","handleLogin","error","signInWithPassword","general","handleRegister","signUp","options","profileError","insert","handleSubmit","preventDefault","success","toggleMode","className","concat","children","onSubmit","htmlFor","type","onChange","placeholder","disabled","onClick"],"sources":["/home/brave/Documents/weekendproject/coffeeblog/src/pages/Auth.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { supabase } from '../lib/supabase';\nimport type { User as SupabaseUser } from '@supabase/supabase-js';\nimport './Auth.css';\n\ninterface User {\n  id: string;\n  username: string;\n  email: string;\n  role: 'admin' | 'publisher' | 'subscriber' | 'donor';\n  created_at: string;\n}\n\ninterface AuthProps {\n  isDarkMode: boolean;\n  onAuthSuccess: (user: User) => void;\n}\n\nconst Auth: React.FC<AuthProps> = ({ isDarkMode, onAuthSuccess }) => {\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const [formData, setFormData] = useState({\n    username: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const [errors, setErrors] = useState<Record<string, string>>({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [message, setMessage] = useState('');\n\n  // Check if user is already logged in\n  useEffect(() => {\n    const checkUser = async () => {\n      const { data: { session } } = await supabase.auth.getSession();\n      if (session) {\n        // Get user profile from profiles table\n        const { data: profile } = await supabase\n          .from('profiles')\n          .select('*')\n          .eq('id', session.user.id)\n          .single();\n        \n        if (profile) {\n          const user: User = {\n            id: profile.id,\n            username: profile.username,\n            email: profile.email,\n            role: profile.role,\n            created_at: profile.created_at\n          };\n          onAuthSuccess(user);\n        }\n      }\n    };\n    checkUser();\n  }, [onAuthSuccess]);\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    \n    // Clear error when user starts typing\n    if (errors[name]) {\n      setErrors(prev => ({\n        ...prev,\n        [name]: ''\n      }));\n    }\n  };\n\n  const validateForm = (): boolean => {\n    const newErrors: Record<string, string> = {};\n\n    if (!formData.email.trim()) {\n      newErrors.email = 'Email is required';\n    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\n      newErrors.email = 'Email format is invalid';\n    }\n\n    if (!formData.password.trim()) {\n      newErrors.password = 'Password is required';\n    } else if (formData.password.length < 6) {\n      newErrors.password = 'Password must be at least 6 characters';\n    }\n\n    if (!isLoginMode) {\n      if (!formData.username.trim()) {\n        newErrors.username = 'Username is required';\n      }\n\n      if (!formData.confirmPassword.trim()) {\n        newErrors.confirmPassword = 'Please confirm your password';\n      } else if (formData.password !== formData.confirmPassword) {\n        newErrors.confirmPassword = 'Passwords do not match';\n      }\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleLogin = async (): Promise<boolean> => {\n    try {\n      const { data, error } = await supabase.auth.signInWithPassword({\n        email: formData.email,\n        password: formData.password\n      });\n\n      if (error) {\n        setErrors({ general: error.message });\n        return false;\n      }\n\n      if (data.user) {\n        // Get user profile\n        const { data: profile } = await supabase\n          .from('profiles')\n          .select('*')\n          .eq('id', data.user.id)\n          .single();\n\n        if (profile) {\n          const user: User = {\n            id: profile.id,\n            username: profile.username,\n            email: profile.email,\n            role: profile.role,\n            created_at: profile.created_at\n          };\n          onAuthSuccess(user);\n          setMessage('Login successful!');\n          return true;\n        }\n      }\n    } catch (error) {\n      setErrors({ general: 'An error occurred during login' });\n    }\n    return false;\n  };\n\n  const handleRegister = async (): Promise<boolean> => {\n    try {\n      const { data, error } = await supabase.auth.signUp({\n        email: formData.email,\n        password: formData.password,\n        options: {\n          data: {\n            username: formData.username,\n            role: 'subscriber'\n          }\n        }\n      });\n\n      if (error) {\n        setErrors({ general: error.message });\n        return false;\n      }\n\n      if (data.user) {\n        // Create user profile\n        const { error: profileError } = await supabase\n          .from('profiles')\n          .insert([\n            {\n              id: data.user.id,\n              username: formData.username,\n              email: formData.email,\n              role: 'subscriber'\n            }\n          ]);\n\n        if (profileError) {\n          setErrors({ general: 'Error creating user profile' });\n          return false;\n        }\n\n        // If user is immediately confirmed, log them in\n        if (data.session) {\n          const user: User = {\n            id: data.user.id,\n            username: formData.username,\n            email: formData.email,\n            role: 'subscriber',\n            created_at: data.user.created_at\n          };\n          onAuthSuccess(user);\n          setMessage('Registration successful!');\n        } else {\n          setMessage('Registration successful! Please check your email for verification.');\n        }\n        return true;\n      }\n    } catch (error) {\n      setErrors({ general: 'An error occurred during registration' });\n    }\n    return false;\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!validateForm()) {\n      return;\n    }\n\n    setIsSubmitting(true);\n    setErrors({});\n    setMessage('');\n\n    try {\n      let success = false;\n      if (isLoginMode) {\n        success = await handleLogin();\n      } else {\n        success = await handleRegister();\n      }\n\n      if (success) {\n        // Reset form\n        setFormData({\n          username: '',\n          email: '',\n          password: '',\n          confirmPassword: ''\n        });\n      }\n    } catch (error) {\n      setErrors({ general: 'An error occurred. Please try again.' });\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const toggleMode = () => {\n    setIsLoginMode(!isLoginMode);\n    setFormData({\n      username: '',\n      email: '',\n      password: '',\n      confirmPassword: ''\n    });\n    setErrors({});\n    setMessage('');\n  };\n\n  return (\n    <div className={`auth ${isDarkMode ? 'dark-mode' : ''}`}>\n      <div className=\"auth-container\">\n        <div className=\"auth-form\">\n          <div className=\"auth-header\">\n            <h1>{isLoginMode ? 'Welcome Back' : 'Create Account'}</h1>\n            <p>\n              {isLoginMode \n                ? 'Sign in to access your dashboard and saved content'\n                : 'Join our community to save articles, create content, and more'\n              }\n            </p>\n          </div>\n\n          {message && (\n            <div className=\"message success-message\">\n              {message}\n            </div>\n          )}\n\n          {errors.general && (\n            <div className=\"message error-message\">\n              {errors.general}\n            </div>\n          )}\n\n          <form onSubmit={handleSubmit} className=\"form\">\n            {!isLoginMode && (\n              <div className=\"form-group\">\n                <label htmlFor=\"username\">Username *</label>\n                <input\n                  type=\"text\"\n                  id=\"username\"\n                  name=\"username\"\n                  value={formData.username}\n                  onChange={handleInputChange}\n                  placeholder=\"Enter your display name\"\n                  className={errors.username ? 'error' : ''}\n                />\n                {errors.username && <span className=\"error-text\">{errors.username}</span>}\n              </div>\n            )}\n\n            <div className=\"form-group\">\n              <label htmlFor=\"email\">Email Address *</label>\n              <input\n                type=\"email\"\n                id=\"email\"\n                name=\"email\"\n                value={formData.email}\n                onChange={handleInputChange}\n                placeholder=\"Enter your email\"\n                className={errors.email ? 'error' : ''}\n              />\n              {errors.email && <span className=\"error-text\">{errors.email}</span>}\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"password\">Password *</label>\n              <input\n                type=\"password\"\n                id=\"password\"\n                name=\"password\"\n                value={formData.password}\n                onChange={handleInputChange}\n                placeholder=\"Enter your password\"\n                className={errors.password ? 'error' : ''}\n              />\n              {errors.password && <span className=\"error-text\">{errors.password}</span>}\n            </div>\n\n            {!isLoginMode && (\n              <div className=\"form-group\">\n                <label htmlFor=\"confirmPassword\">Confirm Password *</label>\n                <input\n                  type=\"password\"\n                  id=\"confirmPassword\"\n                  name=\"confirmPassword\"\n                  value={formData.confirmPassword}\n                  onChange={handleInputChange}\n                  placeholder=\"Confirm your password\"\n                  className={errors.confirmPassword ? 'error' : ''}\n                />\n                {errors.confirmPassword && <span className=\"error-text\">{errors.confirmPassword}</span>}\n              </div>\n            )}\n\n            <button \n              type=\"submit\" \n              className=\"submit-btn\"\n              disabled={isSubmitting}\n            >\n              {isSubmitting \n                ? (isLoginMode ? 'Signing In...' : 'Creating Account...') \n                : (isLoginMode ? 'Sign In' : 'Create Account')\n              }\n            </button>\n          </form>\n\n          <div className=\"auth-footer\">\n            <p>\n              {isLoginMode ? \"Don't have an account? \" : \"Already have an account? \"}\n              <button \n                type=\"button\" \n                className=\"link-btn\"\n                onClick={toggleMode}\n              >\n                {isLoginMode ? 'Sign up' : 'Sign in'}\n              </button>\n            </p>\n          </div>\n\n          {isLoginMode && (\n            <div className=\"demo-info\">\n              <p>\n                <strong>Demo Mode:</strong> You can sign up with any email and password, \n                or use the test account: <code>test@demo.com</code> / <code>password123</code>\n              </p>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Auth;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}