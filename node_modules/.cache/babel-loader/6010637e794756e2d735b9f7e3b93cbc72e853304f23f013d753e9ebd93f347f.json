{"ast":null,"code":"var _jsxFileName = \"/home/brave/Documents/weekendproject/coffeeblog/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, createContext } from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport Blog from \"./pages/Blog\";\nimport Subscriptions from \"./pages/Subscriptions\";\nimport Contact from \"./pages/Contact\";\nimport Dashboard from \"./pages/Dashboard\";\n\n// Create context for dark mode\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DarkModeContext = /*#__PURE__*/createContext({\n  isDarkMode: false,\n  toggleDarkMode: () => {}\n});\nconst AppContent = ({\n  isDarkMode,\n  toggleDarkMode\n}) => {\n  return /*#__PURE__*/_jsxDEV(DarkModeContext.Provider, {\n    value: {\n      isDarkMode,\n      toggleDarkMode\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `App ${isDarkMode ? \"dark-mode\" : \"\"}`,\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        isDarkMode: isDarkMode,\n        toggleDarkMode: toggleDarkMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"main-content\",\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(Blog, {\n              isDarkMode: isDarkMode,\n              toggleDarkMode: toggleDarkMode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 38\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/blog\",\n            element: /*#__PURE__*/_jsxDEV(Blog, {\n              isDarkMode: isDarkMode,\n              toggleDarkMode: toggleDarkMode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 42\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/subscriptions\",\n            element: /*#__PURE__*/_jsxDEV(Subscriptions, {\n              isDarkMode: isDarkMode,\n              toggleDarkMode: toggleDarkMode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 51\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/contact\",\n            element: /*#__PURE__*/_jsxDEV(Contact, {\n              isDarkMode: isDarkMode,\n              toggleDarkMode: toggleDarkMode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/dashboard\",\n            element: /*#__PURE__*/_jsxDEV(Dashboard, {\n              isDarkMode: isDarkMode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 47\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {\n        isDarkMode: isDarkMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_c = AppContent;\nfunction App() {\n  _s();\n  const [isDarkMode, setIsDarkMode] = useState(false);\n\n  // Load dark mode preference on app start\n  useEffect(() => {\n    const savedDarkMode = localStorage.getItem(\"blogDarkMode\");\n    if (savedDarkMode) {\n      setIsDarkMode(JSON.parse(savedDarkMode));\n    }\n  }, []);\n\n  // Toggle dark mode function\n  const toggleDarkMode = () => {\n    const newDarkMode = !isDarkMode;\n    setIsDarkMode(newDarkMode);\n    localStorage.setItem(\"blogDarkMode\", JSON.stringify(newDarkMode));\n\n    // Dispatch custom event for other components\n    window.dispatchEvent(new CustomEvent(\"darkModeChange\", {\n      detail: {\n        isDarkMode: newDarkMode\n      }\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(AppContent, {\n      isDarkMode: isDarkMode,\n      toggleDarkMode: toggleDarkMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"bUs4CHDjU8AH+ZZYt8wlh4bHppI=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"AppContent\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","createContext","BrowserRouter","Router","Routes","Route","Header","Footer","Blog","Subscriptions","Contact","Dashboard","jsxDEV","_jsxDEV","DarkModeContext","isDarkMode","toggleDarkMode","AppContent","Provider","value","children","className","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c","App","_s","setIsDarkMode","savedDarkMode","localStorage","getItem","JSON","parse","newDarkMode","setItem","stringify","window","dispatchEvent","CustomEvent","detail","_c2","$RefreshReg$"],"sources":["/home/brave/Documents/weekendproject/coffeeblog/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect, createContext } from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport Blog from \"./pages/Blog\";\nimport Subscriptions from \"./pages/Subscriptions\";\nimport Contact from \"./pages/Contact\";\nimport Dashboard from \"./pages/Dashboard\";\n\n// Create context for dark mode\nexport const DarkModeContext = createContext({\n  isDarkMode: false,\n  toggleDarkMode: () => {}\n});\n\ninterface AppContentProps {\n  isDarkMode: boolean;\n  toggleDarkMode: () => void;\n}\n\nconst AppContent: React.FC<AppContentProps> = ({ isDarkMode, toggleDarkMode }) => {\n  return (\n    <DarkModeContext.Provider value={{ isDarkMode, toggleDarkMode }}>\n      <div className={`App ${isDarkMode ? \"dark-mode\" : \"\"}`}>\n        <Header isDarkMode={isDarkMode} toggleDarkMode={toggleDarkMode} />\n        <main className=\"main-content\">\n          <Routes>\n            <Route path=\"/\" element={<Blog isDarkMode={isDarkMode} toggleDarkMode={toggleDarkMode} />} />\n            <Route path=\"/blog\" element={<Blog isDarkMode={isDarkMode} toggleDarkMode={toggleDarkMode} />} />\n            <Route path=\"/subscriptions\" element={<Subscriptions isDarkMode={isDarkMode} toggleDarkMode={toggleDarkMode} />} />\n            <Route path=\"/contact\" element={<Contact isDarkMode={isDarkMode} toggleDarkMode={toggleDarkMode} />} />\n            <Route path=\"/dashboard\" element={<Dashboard isDarkMode={isDarkMode} />} />\n          </Routes>\n        </main>\n        <Footer isDarkMode={isDarkMode} />\n      </div>\n    </DarkModeContext.Provider>\n  );\n};\n\nfunction App() {\n  const [isDarkMode, setIsDarkMode] = useState(false);\n\n  // Load dark mode preference on app start\n  useEffect(() => {\n    const savedDarkMode = localStorage.getItem(\"blogDarkMode\");\n    if (savedDarkMode) {\n      setIsDarkMode(JSON.parse(savedDarkMode));\n    }\n  }, []);\n\n  // Toggle dark mode function\n  const toggleDarkMode = () => {\n    const newDarkMode = !isDarkMode;\n    setIsDarkMode(newDarkMode);\n    localStorage.setItem(\"blogDarkMode\", JSON.stringify(newDarkMode));\n    \n    // Dispatch custom event for other components\n    window.dispatchEvent(new CustomEvent(\"darkModeChange\", { \n      detail: { isDarkMode: newDarkMode } \n    }));\n  };\n\n  return (\n    <Router>\n      <AppContent isDarkMode={isDarkMode} toggleDarkMode={toggleDarkMode} />\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,aAAa,QAAQ,OAAO;AACjE,SAASC,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AACzE,OAAO,WAAW;AAClB,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,aAAa,MAAM,uBAAuB;AACjD,OAAOC,OAAO,MAAM,iBAAiB;AACrC,OAAOC,SAAS,MAAM,mBAAmB;;AAEzC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,eAAe,gBAAGb,aAAa,CAAC;EAC3Cc,UAAU,EAAE,KAAK;EACjBC,cAAc,EAAEA,CAAA,KAAM,CAAC;AACzB,CAAC,CAAC;AAOF,MAAMC,UAAqC,GAAGA,CAAC;EAAEF,UAAU;EAAEC;AAAe,CAAC,KAAK;EAChF,oBACEH,OAAA,CAACC,eAAe,CAACI,QAAQ;IAACC,KAAK,EAAE;MAAEJ,UAAU;MAAEC;IAAe,CAAE;IAAAI,QAAA,eAC9DP,OAAA;MAAKQ,SAAS,EAAE,OAAON,UAAU,GAAG,WAAW,GAAG,EAAE,EAAG;MAAAK,QAAA,gBACrDP,OAAA,CAACP,MAAM;QAACS,UAAU,EAAEA,UAAW;QAACC,cAAc,EAAEA;MAAe;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAClEZ,OAAA;QAAMQ,SAAS,EAAC,cAAc;QAAAD,QAAA,eAC5BP,OAAA,CAACT,MAAM;UAAAgB,QAAA,gBACLP,OAAA,CAACR,KAAK;YAACqB,IAAI,EAAC,GAAG;YAACC,OAAO,eAAEd,OAAA,CAACL,IAAI;cAACO,UAAU,EAAEA,UAAW;cAACC,cAAc,EAAEA;YAAe;cAAAM,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAE;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC7FZ,OAAA,CAACR,KAAK;YAACqB,IAAI,EAAC,OAAO;YAACC,OAAO,eAAEd,OAAA,CAACL,IAAI;cAACO,UAAU,EAAEA,UAAW;cAACC,cAAc,EAAEA;YAAe;cAAAM,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAE;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACjGZ,OAAA,CAACR,KAAK;YAACqB,IAAI,EAAC,gBAAgB;YAACC,OAAO,eAAEd,OAAA,CAACJ,aAAa;cAACM,UAAU,EAAEA,UAAW;cAACC,cAAc,EAAEA;YAAe;cAAAM,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAE;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACnHZ,OAAA,CAACR,KAAK;YAACqB,IAAI,EAAC,UAAU;YAACC,OAAO,eAAEd,OAAA,CAACH,OAAO;cAACK,UAAU,EAAEA,UAAW;cAACC,cAAc,EAAEA;YAAe;cAAAM,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAE;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACvGZ,OAAA,CAACR,KAAK;YAACqB,IAAI,EAAC,YAAY;YAACC,OAAO,eAAEd,OAAA,CAACF,SAAS;cAACI,UAAU,EAAEA;YAAW;cAAAO,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAE;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eACPZ,OAAA,CAACN,MAAM;QAACQ,UAAU,EAAEA;MAAW;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACkB,CAAC;AAE/B,CAAC;AAACG,EAAA,GAlBIX,UAAqC;AAoB3C,SAASY,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACf,UAAU,EAAEgB,aAAa,CAAC,GAAGhC,QAAQ,CAAC,KAAK,CAAC;;EAEnD;EACAC,SAAS,CAAC,MAAM;IACd,MAAMgC,aAAa,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;IAC1D,IAAIF,aAAa,EAAE;MACjBD,aAAa,CAACI,IAAI,CAACC,KAAK,CAACJ,aAAa,CAAC,CAAC;IAC1C;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMhB,cAAc,GAAGA,CAAA,KAAM;IAC3B,MAAMqB,WAAW,GAAG,CAACtB,UAAU;IAC/BgB,aAAa,CAACM,WAAW,CAAC;IAC1BJ,YAAY,CAACK,OAAO,CAAC,cAAc,EAAEH,IAAI,CAACI,SAAS,CAACF,WAAW,CAAC,CAAC;;IAEjE;IACAG,MAAM,CAACC,aAAa,CAAC,IAAIC,WAAW,CAAC,gBAAgB,EAAE;MACrDC,MAAM,EAAE;QAAE5B,UAAU,EAAEsB;MAAY;IACpC,CAAC,CAAC,CAAC;EACL,CAAC;EAED,oBACExB,OAAA,CAACV,MAAM;IAAAiB,QAAA,eACLP,OAAA,CAACI,UAAU;MAACF,UAAU,EAAEA,UAAW;MAACC,cAAc,EAAEA;IAAe;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChE,CAAC;AAEb;AAACK,EAAA,CA5BQD,GAAG;AAAAe,GAAA,GAAHf,GAAG;AA8BZ,eAAeA,GAAG;AAAC,IAAAD,EAAA,EAAAgB,GAAA;AAAAC,YAAA,CAAAjB,EAAA;AAAAiB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}