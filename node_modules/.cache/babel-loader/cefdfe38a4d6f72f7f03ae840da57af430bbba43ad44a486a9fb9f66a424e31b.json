{"ast":null,"code":"var _jsxFileName = \"/home/brave/Documents/weekendproject/coffeeblog/src/pages/Auth.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { supabase } from '../lib/supabase';\nimport './Auth.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Auth = ({\n  isDarkMode,\n  onAuthSuccess\n}) => {\n  _s();\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const [formData, setFormData] = useState({\n    username: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [message, setMessage] = useState('');\n\n  // Check if user is already logged in\n  useEffect(() => {\n    const checkUser = async () => {\n      const {\n        data: {\n          session\n        }\n      } = await supabase.auth.getSession();\n      if (session) {\n        // Get user profile from profiles table\n        const {\n          data: profile\n        } = await supabase.from('profiles').select('*').eq('id', session.user.id).single();\n        if (profile) {\n          const user = {\n            id: profile.id,\n            username: profile.username,\n            email: profile.email,\n            role: profile.role,\n            created_at: profile.created_at\n          };\n          onAuthSuccess(user);\n        }\n      }\n    };\n    checkUser();\n  }, [onAuthSuccess]);\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n\n    // Clear error when user starts typing\n    if (errors[name]) {\n      setErrors(prev => ({\n        ...prev,\n        [name]: ''\n      }));\n    }\n  };\n  const validateForm = () => {\n    const newErrors = {};\n    if (!formData.email.trim()) {\n      newErrors.email = 'Email is required';\n    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\n      newErrors.email = 'Email format is invalid';\n    }\n    if (!formData.password.trim()) {\n      newErrors.password = 'Password is required';\n    } else if (formData.password.length < 6) {\n      newErrors.password = 'Password must be at least 6 characters';\n    }\n    if (!isLoginMode) {\n      if (!formData.username.trim()) {\n        newErrors.username = 'Username is required';\n      }\n      if (!formData.confirmPassword.trim()) {\n        newErrors.confirmPassword = 'Please confirm your password';\n      } else if (formData.password !== formData.confirmPassword) {\n        newErrors.confirmPassword = 'Passwords do not match';\n      }\n    }\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n  const handleLogin = async () => {\n    try {\n      const {\n        data,\n        error\n      } = await supabase.auth.signInWithPassword({\n        email: formData.email,\n        password: formData.password\n      });\n      if (error) {\n        setErrors({\n          general: error.message\n        });\n        return false;\n      }\n      if (data.user) {\n        // Get user profile\n        const {\n          data: profile\n        } = await supabase.from('profiles').select('*').eq('id', data.user.id).single();\n        if (profile) {\n          const user = {\n            id: profile.id,\n            username: profile.username,\n            email: profile.email,\n            role: profile.role,\n            created_at: profile.created_at\n          };\n          onAuthSuccess(user);\n          setMessage('Login successful!');\n          return true;\n        }\n      }\n    } catch (error) {\n      setErrors({\n        general: 'An error occurred during login'\n      });\n    }\n    return false;\n  };\n  const handleRegister = async () => {\n    try {\n      const {\n        data,\n        error\n      } = await supabase.auth.signUp({\n        email: formData.email,\n        password: formData.password,\n        options: {\n          data: {\n            username: formData.username,\n            role: 'subscriber'\n          }\n        }\n      });\n      if (error) {\n        setErrors({\n          general: error.message\n        });\n        return false;\n      }\n      if (data.user) {\n        // Create user profile\n        const {\n          error: profileError\n        } = await supabase.from('profiles').insert([{\n          id: data.user.id,\n          username: formData.username,\n          email: formData.email,\n          role: 'subscriber'\n        }]);\n        if (profileError) {\n          console.error('Profile creation error:', profileError);\n          setErrors({\n            general: `Error creating user profile: ${profileError.message}`\n          });\n          return false;\n        }\n\n        // If user is immediately confirmed, log them in\n        if (data.session) {\n          const user = {\n            id: data.user.id,\n            username: formData.username,\n            email: formData.email,\n            role: 'subscriber',\n            created_at: data.user.created_at\n          };\n          onAuthSuccess(user);\n          setMessage('Registration successful!');\n        } else {\n          setMessage('Registration successful! Please check your email for verification.');\n        }\n        return true;\n      }\n    } catch (error) {\n      setErrors({\n        general: 'An error occurred during registration'\n      });\n    }\n    return false;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!validateForm()) {\n      return;\n    }\n    setIsSubmitting(true);\n    setErrors({});\n    setMessage('');\n    try {\n      let success = false;\n      if (isLoginMode) {\n        success = await handleLogin();\n      } else {\n        success = await handleRegister();\n      }\n      if (success) {\n        // Reset form\n        setFormData({\n          username: '',\n          email: '',\n          password: '',\n          confirmPassword: ''\n        });\n      }\n    } catch (error) {\n      setErrors({\n        general: 'An error occurred. Please try again.'\n      });\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  const toggleMode = () => {\n    setIsLoginMode(!isLoginMode);\n    setFormData({\n      username: '',\n      email: '',\n      password: '',\n      confirmPassword: ''\n    });\n    setErrors({});\n    setMessage('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `auth ${isDarkMode ? 'dark-mode' : ''}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: isLoginMode ? 'Welcome Back' : 'Create Account'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: isLoginMode ? 'Sign in to access your dashboard and saved content' : 'Join our community to save articles, create content, and more'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message success-message\",\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 13\n        }, this), errors.general && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message error-message\",\n          children: errors.general\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          className: \"form\",\n          children: [!isLoginMode && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"username\",\n              children: \"Username *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"username\",\n              name: \"username\",\n              value: formData.username,\n              onChange: handleInputChange,\n              placeholder: \"Enter your display name\",\n              className: errors.username ? 'error' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 17\n            }, this), errors.username && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error-text\",\n              children: errors.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              children: \"Email Address *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              id: \"email\",\n              name: \"email\",\n              value: formData.email,\n              onChange: handleInputChange,\n              placeholder: \"Enter your email\",\n              className: errors.email ? 'error' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 15\n            }, this), errors.email && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error-text\",\n              children: errors.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 32\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              children: \"Password *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"password\",\n              name: \"password\",\n              value: formData.password,\n              onChange: handleInputChange,\n              placeholder: \"Enter your password\",\n              className: errors.password ? 'error' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 15\n            }, this), errors.password && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error-text\",\n              children: errors.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 35\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 13\n          }, this), !isLoginMode && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"confirmPassword\",\n              children: \"Confirm Password *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"confirmPassword\",\n              name: \"confirmPassword\",\n              value: formData.confirmPassword,\n              onChange: handleInputChange,\n              placeholder: \"Confirm your password\",\n              className: errors.confirmPassword ? 'error' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 17\n            }, this), errors.confirmPassword && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error-text\",\n              children: errors.confirmPassword\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 44\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"submit-btn\",\n            disabled: isSubmitting,\n            children: isSubmitting ? isLoginMode ? 'Signing In...' : 'Creating Account...' : isLoginMode ? 'Sign In' : 'Create Account'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-footer\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [isLoginMode ? \"Don't have an account? \" : \"Already have an account? \", /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"link-btn\",\n              onClick: toggleMode,\n              children: isLoginMode ? 'Sign up' : 'Sign in'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 11\n        }, this), isLoginMode && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"demo-info\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Demo Mode:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 17\n            }, this), \" You can sign up with any email and password, or use the test account: \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"test@demo.com\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 42\n            }, this), \" / \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"password123\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 71\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 251,\n    columnNumber: 5\n  }, this);\n};\n_s(Auth, \"5Z6Nq2rVWKnjTiZaTpkQ9chMXFk=\");\n_c = Auth;\nexport default Auth;\nvar _c;\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"names":["React","useState","useEffect","supabase","jsxDEV","_jsxDEV","Auth","isDarkMode","onAuthSuccess","_s","isLoginMode","setIsLoginMode","formData","setFormData","username","email","password","confirmPassword","errors","setErrors","isSubmitting","setIsSubmitting","message","setMessage","checkUser","data","session","auth","getSession","profile","from","select","eq","user","id","single","role","created_at","handleInputChange","e","name","value","target","prev","validateForm","newErrors","trim","test","length","Object","keys","handleLogin","error","signInWithPassword","general","handleRegister","signUp","options","profileError","insert","console","handleSubmit","preventDefault","success","toggleMode","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","onChange","placeholder","disabled","onClick","_c","$RefreshReg$"],"sources":["/home/brave/Documents/weekendproject/coffeeblog/src/pages/Auth.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { supabase } from '../lib/supabase';\nimport type { User as SupabaseUser } from '@supabase/supabase-js';\nimport './Auth.css';\n\ninterface User {\n  id: string;\n  username: string;\n  email: string;\n  role: 'admin' | 'publisher' | 'subscriber' | 'donor';\n  created_at: string;\n}\n\ninterface AuthProps {\n  isDarkMode: boolean;\n  onAuthSuccess: (user: User) => void;\n}\n\nconst Auth: React.FC<AuthProps> = ({ isDarkMode, onAuthSuccess }) => {\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const [formData, setFormData] = useState({\n    username: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const [errors, setErrors] = useState<Record<string, string>>({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [message, setMessage] = useState('');\n\n  // Check if user is already logged in\n  useEffect(() => {\n    const checkUser = async () => {\n      const { data: { session } } = await supabase.auth.getSession();\n      if (session) {\n        // Get user profile from profiles table\n        const { data: profile } = await supabase\n          .from('profiles')\n          .select('*')\n          .eq('id', session.user.id)\n          .single();\n        \n        if (profile) {\n          const user: User = {\n            id: profile.id,\n            username: profile.username,\n            email: profile.email,\n            role: profile.role,\n            created_at: profile.created_at\n          };\n          onAuthSuccess(user);\n        }\n      }\n    };\n    checkUser();\n  }, [onAuthSuccess]);\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    \n    // Clear error when user starts typing\n    if (errors[name]) {\n      setErrors(prev => ({\n        ...prev,\n        [name]: ''\n      }));\n    }\n  };\n\n  const validateForm = (): boolean => {\n    const newErrors: Record<string, string> = {};\n\n    if (!formData.email.trim()) {\n      newErrors.email = 'Email is required';\n    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\n      newErrors.email = 'Email format is invalid';\n    }\n\n    if (!formData.password.trim()) {\n      newErrors.password = 'Password is required';\n    } else if (formData.password.length < 6) {\n      newErrors.password = 'Password must be at least 6 characters';\n    }\n\n    if (!isLoginMode) {\n      if (!formData.username.trim()) {\n        newErrors.username = 'Username is required';\n      }\n\n      if (!formData.confirmPassword.trim()) {\n        newErrors.confirmPassword = 'Please confirm your password';\n      } else if (formData.password !== formData.confirmPassword) {\n        newErrors.confirmPassword = 'Passwords do not match';\n      }\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleLogin = async (): Promise<boolean> => {\n    try {\n      const { data, error } = await supabase.auth.signInWithPassword({\n        email: formData.email,\n        password: formData.password\n      });\n\n      if (error) {\n        setErrors({ general: error.message });\n        return false;\n      }\n\n      if (data.user) {\n        // Get user profile\n        const { data: profile } = await supabase\n          .from('profiles')\n          .select('*')\n          .eq('id', data.user.id)\n          .single();\n\n        if (profile) {\n          const user: User = {\n            id: profile.id,\n            username: profile.username,\n            email: profile.email,\n            role: profile.role,\n            created_at: profile.created_at\n          };\n          onAuthSuccess(user);\n          setMessage('Login successful!');\n          return true;\n        }\n      }\n    } catch (error) {\n      setErrors({ general: 'An error occurred during login' });\n    }\n    return false;\n  };\n\n  const handleRegister = async (): Promise<boolean> => {\n    try {\n      const { data, error } = await supabase.auth.signUp({\n        email: formData.email,\n        password: formData.password,\n        options: {\n          data: {\n            username: formData.username,\n            role: 'subscriber'\n          }\n        }\n      });\n\n      if (error) {\n        setErrors({ general: error.message });\n        return false;\n      }\n\n      if (data.user) {\n        // Create user profile\n        const { error: profileError } = await supabase\n          .from('profiles')\n          .insert([\n            {\n              id: data.user.id,\n              username: formData.username,\n              email: formData.email,\n              role: 'subscriber'\n            }\n          ]);\n\n        if (profileError) {\n          console.error('Profile creation error:', profileError);\n          setErrors({ general: `Error creating user profile: ${profileError.message}` });\n          return false;\n        }\n\n        // If user is immediately confirmed, log them in\n        if (data.session) {\n          const user: User = {\n            id: data.user.id,\n            username: formData.username,\n            email: formData.email,\n            role: 'subscriber',\n            created_at: data.user.created_at\n          };\n          onAuthSuccess(user);\n          setMessage('Registration successful!');\n        } else {\n          setMessage('Registration successful! Please check your email for verification.');\n        }\n        return true;\n      }\n    } catch (error) {\n      setErrors({ general: 'An error occurred during registration' });\n    }\n    return false;\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!validateForm()) {\n      return;\n    }\n\n    setIsSubmitting(true);\n    setErrors({});\n    setMessage('');\n\n    try {\n      let success = false;\n      if (isLoginMode) {\n        success = await handleLogin();\n      } else {\n        success = await handleRegister();\n      }\n\n      if (success) {\n        // Reset form\n        setFormData({\n          username: '',\n          email: '',\n          password: '',\n          confirmPassword: ''\n        });\n      }\n    } catch (error) {\n      setErrors({ general: 'An error occurred. Please try again.' });\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const toggleMode = () => {\n    setIsLoginMode(!isLoginMode);\n    setFormData({\n      username: '',\n      email: '',\n      password: '',\n      confirmPassword: ''\n    });\n    setErrors({});\n    setMessage('');\n  };\n\n  return (\n    <div className={`auth ${isDarkMode ? 'dark-mode' : ''}`}>\n      <div className=\"auth-container\">\n        <div className=\"auth-form\">\n          <div className=\"auth-header\">\n            <h1>{isLoginMode ? 'Welcome Back' : 'Create Account'}</h1>\n            <p>\n              {isLoginMode \n                ? 'Sign in to access your dashboard and saved content'\n                : 'Join our community to save articles, create content, and more'\n              }\n            </p>\n          </div>\n\n          {message && (\n            <div className=\"message success-message\">\n              {message}\n            </div>\n          )}\n\n          {errors.general && (\n            <div className=\"message error-message\">\n              {errors.general}\n            </div>\n          )}\n\n          <form onSubmit={handleSubmit} className=\"form\">\n            {!isLoginMode && (\n              <div className=\"form-group\">\n                <label htmlFor=\"username\">Username *</label>\n                <input\n                  type=\"text\"\n                  id=\"username\"\n                  name=\"username\"\n                  value={formData.username}\n                  onChange={handleInputChange}\n                  placeholder=\"Enter your display name\"\n                  className={errors.username ? 'error' : ''}\n                />\n                {errors.username && <span className=\"error-text\">{errors.username}</span>}\n              </div>\n            )}\n\n            <div className=\"form-group\">\n              <label htmlFor=\"email\">Email Address *</label>\n              <input\n                type=\"email\"\n                id=\"email\"\n                name=\"email\"\n                value={formData.email}\n                onChange={handleInputChange}\n                placeholder=\"Enter your email\"\n                className={errors.email ? 'error' : ''}\n              />\n              {errors.email && <span className=\"error-text\">{errors.email}</span>}\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"password\">Password *</label>\n              <input\n                type=\"password\"\n                id=\"password\"\n                name=\"password\"\n                value={formData.password}\n                onChange={handleInputChange}\n                placeholder=\"Enter your password\"\n                className={errors.password ? 'error' : ''}\n              />\n              {errors.password && <span className=\"error-text\">{errors.password}</span>}\n            </div>\n\n            {!isLoginMode && (\n              <div className=\"form-group\">\n                <label htmlFor=\"confirmPassword\">Confirm Password *</label>\n                <input\n                  type=\"password\"\n                  id=\"confirmPassword\"\n                  name=\"confirmPassword\"\n                  value={formData.confirmPassword}\n                  onChange={handleInputChange}\n                  placeholder=\"Confirm your password\"\n                  className={errors.confirmPassword ? 'error' : ''}\n                />\n                {errors.confirmPassword && <span className=\"error-text\">{errors.confirmPassword}</span>}\n              </div>\n            )}\n\n            <button \n              type=\"submit\" \n              className=\"submit-btn\"\n              disabled={isSubmitting}\n            >\n              {isSubmitting \n                ? (isLoginMode ? 'Signing In...' : 'Creating Account...') \n                : (isLoginMode ? 'Sign In' : 'Create Account')\n              }\n            </button>\n          </form>\n\n          <div className=\"auth-footer\">\n            <p>\n              {isLoginMode ? \"Don't have an account? \" : \"Already have an account? \"}\n              <button \n                type=\"button\" \n                className=\"link-btn\"\n                onClick={toggleMode}\n              >\n                {isLoginMode ? 'Sign up' : 'Sign in'}\n              </button>\n            </p>\n          </div>\n\n          {isLoginMode && (\n            <div className=\"demo-info\">\n              <p>\n                <strong>Demo Mode:</strong> You can sign up with any email and password, \n                or use the test account: <code>test@demo.com</code> / <code>password123</code>\n              </p>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Auth;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}