[{"/home/brave/Documents/weekendproject/coffeeblog/src/index.tsx":"1","/home/brave/Documents/weekendproject/coffeeblog/src/reportWebVitals.ts":"2","/home/brave/Documents/weekendproject/coffeeblog/src/App.tsx":"3","/home/brave/Documents/weekendproject/coffeeblog/src/components/Header.tsx":"4","/home/brave/Documents/weekendproject/coffeeblog/src/components/Footer.tsx":"5","/home/brave/Documents/weekendproject/coffeeblog/src/pages/Blog.tsx":"6","/home/brave/Documents/weekendproject/coffeeblog/src/pages/Subscriptions.tsx":"7","/home/brave/Documents/weekendproject/coffeeblog/src/pages/Contact.tsx":"8","/home/brave/Documents/weekendproject/coffeeblog/src/pages/Dashboard.tsx":"9","/home/brave/Documents/weekendproject/coffeeblog/src/components/SaveArticleButton.tsx":"10","/home/brave/Documents/weekendproject/coffeeblog/src/components/ArticleComments.tsx":"11","/home/brave/Documents/weekendproject/coffeeblog/src/components/LikeButton.tsx":"12","/home/brave/Documents/weekendproject/coffeeblog/src/pages/Home.tsx":"13","/home/brave/Documents/weekendproject/coffeeblog/src/pages/About.tsx":"14","/home/brave/Documents/weekendproject/coffeeblog/src/components/ArticleEditor.tsx":"15","/home/brave/Documents/weekendproject/coffeeblog/src/components/ArticleManager.tsx":"16","/home/brave/Documents/weekendproject/coffeeblog/src/components/NewsletterBar.tsx":"17"},{"size":554,"mtime":1751822190333,"results":"18","hashOfConfig":"19"},{"size":327,"mtime":1751822190335,"results":"20","hashOfConfig":"19"},{"size":2683,"mtime":1751969123340,"results":"21","hashOfConfig":"19"},{"size":980,"mtime":1751966783595,"results":"22","hashOfConfig":"19"},{"size":459,"mtime":1751967159667,"results":"23","hashOfConfig":"19"},{"size":17030,"mtime":1751969390020,"results":"24","hashOfConfig":"19"},{"size":7887,"mtime":1751969586713,"results":"25","hashOfConfig":"19"},{"size":5534,"mtime":1751969575949,"results":"26","hashOfConfig":"19"},{"size":15232,"mtime":1751969521454,"results":"27","hashOfConfig":"19"},{"size":2017,"mtime":1751822190333,"results":"28","hashOfConfig":"19"},{"size":4929,"mtime":1751822190332,"results":"29","hashOfConfig":"19"},{"size":2422,"mtime":1751822190333,"results":"30","hashOfConfig":"19"},{"size":6981,"mtime":1751815857144,"results":"31","hashOfConfig":"19"},{"size":4810,"mtime":1751815857151,"results":"32","hashOfConfig":"19"},{"size":23365,"mtime":1751965271254,"results":"33","hashOfConfig":"19"},{"size":6840,"mtime":1751963443188,"results":"34","hashOfConfig":"19"},{"size":1616,"mtime":1751968405584,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1n5qscc",{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/brave/Documents/weekendproject/coffeeblog/src/index.tsx",[],[],"/home/brave/Documents/weekendproject/coffeeblog/src/reportWebVitals.ts",[],[],"/home/brave/Documents/weekendproject/coffeeblog/src/App.tsx",[],[],"/home/brave/Documents/weekendproject/coffeeblog/src/components/Header.tsx",[],[],"/home/brave/Documents/weekendproject/coffeeblog/src/components/Footer.tsx",[],[],"/home/brave/Documents/weekendproject/coffeeblog/src/pages/Blog.tsx",[],[],"/home/brave/Documents/weekendproject/coffeeblog/src/pages/Subscriptions.tsx",[],["87"],"/home/brave/Documents/weekendproject/coffeeblog/src/pages/Contact.tsx",[],[],"/home/brave/Documents/weekendproject/coffeeblog/src/pages/Dashboard.tsx",[],[],"/home/brave/Documents/weekendproject/coffeeblog/src/components/SaveArticleButton.tsx",[],[],"/home/brave/Documents/weekendproject/coffeeblog/src/components/ArticleComments.tsx",[],[],"/home/brave/Documents/weekendproject/coffeeblog/src/components/LikeButton.tsx",[],[],"/home/brave/Documents/weekendproject/coffeeblog/src/pages/Home.tsx",[],[],"/home/brave/Documents/weekendproject/coffeeblog/src/pages/About.tsx",[],[],"/home/brave/Documents/weekendproject/coffeeblog/src/components/ArticleEditor.tsx",["88","89"],[],"/home/brave/Documents/weekendproject/coffeeblog/src/components/ArticleManager.tsx",[],[],"/home/brave/Documents/weekendproject/coffeeblog/src/components/NewsletterBar.tsx",[],[],{"ruleId":"90","severity":1,"message":"91","line":11,"column":10,"nodeType":"92","messageId":"93","endLine":11,"endColumn":22,"suppressions":"94"},{"ruleId":"95","severity":1,"message":"96","line":118,"column":9,"nodeType":"97","endLine":181,"endColumn":4,"suggestions":"98"},{"ruleId":"95","severity":1,"message":"99","line":242,"column":9,"nodeType":"97","endLine":247,"endColumn":4,"suggestions":"100"},"@typescript-eslint/no-unused-vars","'selectedPlan' is assigned a value but never used.","Identifier","unusedVar",["101"],"react-hooks/exhaustive-deps","The 'insertFormatting' function makes the dependencies of useEffect Hook (at line 321) change on every render. To fix this, wrap the definition of 'insertFormatting' in its own useCallback() Hook.","VariableDeclarator",["102"],"The 'handleSave' function makes the dependencies of useEffect Hook (at line 321) change on every render. To fix this, wrap the definition of 'handleSave' in its own useCallback() Hook.",["103"],{"kind":"104","justification":"105"},{"desc":"106","fix":"107"},{"desc":"108","fix":"109"},"directive","","Wrap the definition of 'insertFormatting' in its own useCallback() Hook.",{"range":"110","text":"111"},"Wrap the definition of 'handleSave' in its own useCallback() Hook.",{"range":"112","text":"113"},[3752,6345],"useCallback((format: string) => {\n    if (!textareaRef.current) return;\n\n    const { start, end, selected } = getCurrentSelection();\n    const beforeText = article.content.substring(0, start);\n    const afterText = article.content.substring(end);\n\n    let newText = '';\n    let cursorOffset = 0;\n\n    // Show active format temporarily\n    setActiveFormat(format);\n    setTimeout(() => setActiveFormat(''), 300);\n\n    switch (format) {\n      case 'bold':\n        newText = selected ? `**${selected}**` : '**Bold Text**';\n        cursorOffset = selected ? 0 : 2;\n        break;\n      case 'italic':\n        newText = selected ? `*${selected}*` : '*Italic Text*';\n        cursorOffset = selected ? 0 : 1;\n        break;\n      case 'heading':\n        const headingPrefix = beforeText && !beforeText.endsWith('\\n') ? '\\n' : '';\n        const headingSuffix = afterText && !afterText.startsWith('\\n') ? '\\n' : '';\n        newText = `${headingPrefix}## ${selected || 'Heading'}${headingSuffix}`;\n        cursorOffset = selected ? 0 : 3;\n        break;\n      case 'quote':\n        const quotePrefix = beforeText && !beforeText.endsWith('\\n') ? '\\n' : '';\n        const quoteSuffix = afterText && !afterText.startsWith('\\n') ? '\\n' : '';\n        newText = `${quotePrefix}> ${selected || 'Quote text'}${quoteSuffix}`;\n        cursorOffset = selected ? 0 : 2;\n        break;\n      case 'list':\n        const listPrefix = beforeText && !beforeText.endsWith('\\n') ? '\\n' : '';\n        const listSuffix = afterText && !afterText.startsWith('\\n') ? '\\n' : '';\n        newText = `${listPrefix}- ${selected || 'List item'}${listSuffix}`;\n        cursorOffset = selected ? 0 : 2;\n        break;\n      case 'center':\n        newText = selected ? `<div style=\"text-align: center\">${selected}</div>` : '<div style=\"text-align: center\">Centered text</div>';\n        cursorOffset = selected ? 0 : 30;\n        break;\n      case 'justify':\n        newText = selected ? `<div style=\"text-align: justify\">${selected}</div>` : '<div style=\"text-align: justify\">Justified text</div>';\n        cursorOffset = selected ? 0 : 31;\n        break;\n      default:\n        return;\n    }\n\n    const newContent = beforeText + newText + afterText;\n    const readTime = calculateReadTime(newContent);\n    setArticle(prev => ({ ...prev, content: newContent, readTime }));\n\n    // Reset cursor position\n    setTimeout(() => {\n      textareaRef.current?.focus();\n      const newPosition = selected ? start + newText.length : start + newText.length - cursorOffset;\n      textareaRef.current?.setSelectionRange(newPosition, newPosition);\n    }, 0);\n  })",[8088,8199],"useCallback(() => {\n    if (isFormValid) {\n      localStorage.removeItem('draft-article');\n      onSave(article);\n    }\n  })"]